
character literals
------------------

'A'
'0x1A'
'012'

C dilinde karakter sabitlerinin türü int türüdür
C++ dilinde karakter sabitlerinin türü char türüdür

564.

5.
5.0

0.5
.5

34F //gecersiz
34.F //gecerli türü float
34.f //gecerli türü float



#include <iostream>

//int türü 4 byte long türü 4 byte

int main()
{
	using namespace std;

	cout << typeid(3.4f).name() << "\n";	//float
	cout << typeid(3.4F).name() << "\n";	//float
	cout << typeid(3.F).name() << "\n";		//float
	//cout << typeid(3f).name() << "\n";	//gecersiz

}
//----------------------------------------------------------------------------------------------------------

34
34u
34L
34LU
34LL
34LLU

3.4
3.4F
3.4L
-------------------------------

0
0U
0L
0LU
0.
0.F
0.L

#define _CRT_SECURE_NO_WARNINGS


#include <stdio.h>


int main()
{
	(3 + 0.) / 2

}
//----------------------------------------------------------------------------------------------------------

3.4
2.3f
2.3F
//4F
7.8L

2.3e4


karakter sabitleri (character literal)
C'de karakter sabitlerinin türü int
C++'da karakter sabitlerinin türü char

54
-------------------------------------

'A'   bu bir sabit
'A'   bu bir karakter sabiti
'A'   bu sabitin türü int
'A'   bu sabitin değeri

character encoding

P
B

0
1
2

66 65 66 65

42 41 42 41

0100 0010 0100 0001 0100 0010 0100 0001
-------------------------------------------


65   A
66   B



30  48

0	48  0011 0000
1   49  0011 0001
2   50
3   51
4
5
6
7
8
9
//----------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <ctype.h>
#include <stdio.h>


int main()
{
	FILE *f = fopen("ascii.txt", "w");
	if (!f) {
		printf("dosya olusturulamadi\n");
		return 1;
	}

	for (int i = 0; i < 128; ++i) {
		if (iscntrl(i))
			fprintf(f, "0x%02X  %3d   KONTROL KARAKTERİ\n", i, i);
		else
			fprintf(f, "0x%02X  %3d   %c\n", i, i, i);
	}

	fclose(f);
}
//----------------------------------------------------------------------------------------------------------

escape sequence



//----------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <ctype.h>
#include <stdio.h>


int main()
{
	printf("null character  = %d\n", '\0');
	printf("alert           = %d\n", '\a');
	printf("newline         = %d\n", '\n');
	printf("horizontal  tab = %d\n", '\t');
	printf("vertical tab    = %d\n", '\v');
	printf("carriage return = %d\n", '\r');
	printf("backspace       = %d\n", '\b');
	printf("form feed       = %d\n", '\f');
	printf("back slash      = %d\n", '\\');
	printf("single quote    = %d\n", '\'');
	printf("double quote    = %d\n", '\"');
	printf("double quote    = %d\n", '"');
	printf("question mark   = %d\n", '\?');
	printf("question mark   = %d\n", '?');

}
//----------------------------------------------------------------------------------------------------------


'\x41'
'\111'



//----------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <ctype.h>
#include <stdio.h>


int main()
{
	printf("%d\n", '\111');

}
//----------------------------------------------------------------------------------------------------------

'A'
'\n'
'\x41'
'\011'



//----------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>


int main()
{
	//int ival = 652131324;
	//int ival = 652'131'324;
	int ival = 0b0101'1111'0101;

}
//----------------------------------------------------------------------------------------------------------

input - output operations
standard input

prog > ali.txt
prog < ali.txt

formatted input / output
unformatted input / output

endianness
little endian

0000 0001		4000
0000 0000		4001
0000 0000		4002
0000 0000		4003

0x41A291F5

little endian
f5
91
a2
41

big endian
41
a2
91
f5

//----------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------
#include <stdio.h>

int main()
{
	int x = 1;

	if (*(char*)&x)
		printf("little endian\n");
	else
		printf("big endian\n");
}
//----------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------



0000 1111
0000 0000
0000 0000
0000 0000



tamsayılar

sayı sistemi
tür
showbase
showpos
uppercase
output width (yazma alanı genisligi)
fill character
left/right/internal


nokta yazilacak  showpoint
noktadan sonra kaç basamak
fixed / scientific

ve meşhur printf fonksiyonu

void func(int x, int y, ...);


66
65
66
65
0


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	printf("alican\n\n\tdeniz");

}
//----------------------------------------------------------------------------------------------------------

'\102'

"\102"

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	//printf("\x42URS\x41");
	//printf("\102\101\102\101\012");
	printf("\tahmet\n\tmehmet\n\thasan\n");

}
//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	printf("\"hilal\"\n");
	printf("\\ahmet\\");
}
//----------------------------------------------------------------------------------------------------------

12
x
9 + 7

%


%d
%x
%X
%o
%ld
%f
%u

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	int x = -1;

	printf("x = %d\n", x);
	printf("x = %u\n", x);

}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	int x = 111264;

	printf("x = %d\n", x);
	printf("x = %x\n", x);
	printf("x = %X\n", x);
	printf("x = %o\n", x);

}
//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
//10 * 20 = 200

int main()
{
	int x = 10;
	int y = 20;

	printf("%d * %d = %d\n", x, y, x * y);

}
//----------------------------------------------------------------------------------------------------------

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
//10 * 20 = 200

int main()
{
	int x = 9187321;

	printf("%d\n%o\n%x\n", x, x, x);
}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	for (int i = 33; i < 127; ++i) {
		printf("%3d %c\n", i, i);
	}
}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	int x, y;

	printf("iki tamsayi giriniz: ");
	scanf("%d%d", &x, &y);

	printf("%d * %d + %d * %d = %d\n", x, x, y, y, x * x + y * y);

}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

int main()
{
	for (int i = 0; i <= 100; ++i) {
		printf("%3d  %f\n", i, sqrt(i));
	}

}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

int main()
{
	int x;

	printf("bir tamsayi giriniz: ");
	scanf("%d", &x);

	int n = printf("deger = %d\n", x);
	printf("n = %d\n", n);


}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	int x = 98765;

	printf("%d", printf("%d", printf("%d", x)));

}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int max2(int x, int y)
{
	return x > y ? x : y;
}

int main()
{
	int x, y, z, t;

	printf("4 sayi girin: ");
	scanf("%d%d%d%d", &x, &y, &z, &t);
	printf("%d\n", max2(max2(x, y), max2(z, t)));

}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int max2(int x, int y)
{
	return x > y ? x : y;
}

int main()
{
	int x, y, z, t;

	printf("4 sayi girin: ");
	scanf("%d%d%d%d", &x, &y, &z, &t);
	printf("%d\n", max2(max2(x, y), max2(z, t)));

}
//----------------------------------------------------------------------------------------------------------

line buffered input function

standard input buffer

456 enter


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>



int main()
{
	int x, y, z, t;

	printf("bir giris yapin: ");
	scanf("%d", &x);
	scanf("%d", &y);
	scanf("%d", &z);
	scanf("%d", &t);

	printf("x = %d\n", x);
	printf("y = %d\n", y);
	printf("z = %d\n", z);
	printf("t = %d\n", t);
}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	int x;

	for (int i = 0; i < 4; ++i) {
		scanf("%d", &x);
		printf("girilen sayi : %d\n", x);

	}
}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>

int main()
{
	int x, y, z;

	printf("uc tamsayi giriniz: ");
	int retval = scanf("%d%d%d", &x, &y, &z);

	printf("retval = %d\n", retval);

}
//----------------------------------------------------------------------------------------------------------