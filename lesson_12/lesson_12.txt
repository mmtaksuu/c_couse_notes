loop statements (döngü deyimleri)
---------------------------------

//range-based for loop
for (auto x : vec)

//controle xpression


while (expr)
	statement;

----------------------------


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>


int main()
{
	int c;

	printf("haydi gir bakalim bir seyler: ");

	while ((c = getchar()) != '\n') {
		printf("%d\n", c);
	}

}

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <time.h>



int main()
{
	srand((unsigned)time(0));

	int ival;

	while ((ival = rand() % 1000) != 500) {
		printf("%d ", ival);
	}
	printf("\n\n");

	printf("ival = %d\n", ival);
}

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

int main()
{
	int low, high, n;

	printf("bir aralik girin: ");
	scanf("%d%d", &low, &high);
	printf("kaca tam bolunenler : ");
	scanf("%d", &n);

	int temp = low;
	int cnt = 0;

	while (temp <= high) {
		if (temp % n == 0) {
			printf("%d ", temp);
			++cnt;
		}
		++temp;
	}
	printf("\n[%d %d] araliginda [%d] ile tam bolunen [%d] sayi yazildi\n", low, high, n, cnt);
}
/**********************************************************************************************************************/




int main()
{
	int x = 0;

	while (x++ < 100);
		printf("%d ", x);
}


n kez dönen while döngü idiyomu

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

int main()
{
	int n;

	printf("kac kez : ");
	scanf("%d", &n);

	while (n-- > 0) {
		printf("necati\n");
	}

}


/**********************************************************************************************************************/

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

int main()
{
	int n;

	printf("kac kez : ");
	scanf("%d", &n);

	while (n--) {
		printf("necati\n");
	}

}


/**********************************************************************************************************************/
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

int main()
{
	int n;

	printf("kac kez : ");
	scanf("%d", &n);

	//abi, bu ne operatörü??? uzun ok operatörü
	while (n --> 0) {
		printf("necati\n");
	}

}


/**********************************************************************************************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>


int power(int base, int exp)
{
	int result = 1;

	while (exp--)
		result *= base;

	return result;
}

int main()
{
	int x, y;

	printf("iki tamsayi giriniz: ");
	scanf("%d%d", &x, &y);

	printf("%d --> %d = %d\n", x, y, power(x, y));
}

/**********************************************************************************************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>


int factorial(int x)
{
	return x < 2 ? 1 : factorial(x - 1) * x;
}

int main()
{
	for (int i = 0; i < 13; ++i) {
		printf("%2d! = %d\n", i, factorial(i));
	}

}

/**********************************************************************************************************************/


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include <stdint.h>

int64_t factorial(int n)
{
	static const int vals[] = {
			1,
			1,
			2,
			6,
			24,
			120,
			720,
			5040,
			40320,
			362880,
			3628800,
			39916800,
			479001600,
			6227020800,
			87178291200,
			1307674368000,
			20922789888000,
			355687428096000,
			6402373705728000,
			121645100408832000,
			2432902008176640000, };

	return vals[n];
}







#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	int c;
	int sum = 0;

	//İLERİDE göreceğiz
	setvbuf(stdin, NULL, _IOFBF, 4 * BUFSIZ);


	printf("bir sayi girin: ");

	while ((c = getchar()) != '\n')
		sum += c - '0';

	if (sum % 3 == 0)
		printf("evet bolunur\n");
	else
		printf("hayir bolunmez\n");

}
/**********************************************************************************************************************/
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int sumdigit(int val)
{
	int sum = 0;

	while (val) {
		sum += val % 10;
		val /= 10;
	}

	return sum;
}

int ndigit(int val)
{
	int digit_count = 0;

	if (val == 0)
		return 1;

	while (val) {
		++digit_count;
		val /= 10;
	}

	return digit_count;
}

int dreverse(int val)
{
	int x = 0;

	while (val) {
		x = x * 10 + val % 10;
		val /= 10;
	}

	return x;
}

int main()
{
	int x;

	printf("bir tamsayi giriniz: ");
	scanf("%d", &x);

	printf("%d sayisi %d basamakli\n", x, ndigit(x));
	printf("%d sayisi basamaklari toplami %d\n", x, sumdigit(x));
	printf("%d sayisinin basamaksal tersi %d\n", x, dreverse(x));

}
/**********************************************************************************************************************/



33  100 50 25 76  38 19 58 29 88 44 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

void print_collatz(unsigned long long int uval)
{
	while (uval != 1) {
		printf("%llu ", uval);
		if (uval % 2 == 0)
			uval /= 2;
		else
			uval = uval * 3 + 1;
	}

	printf("1\n");
}


int main()
{
	print_collatz(77777777777ull);
}
/**********************************************************************************************************************/


döngü () {
	////statement
	////statement
	if (exp)
		return x;
	////statement
	////statement
}


Bir döngüdeyim nasıl çıkabilirim?

1) kontrol ifadesinin yanlış olması ile
2) return deyimi ile
3) break statement ile
4) goto statement ile
5) exit / quick_exit / abort


while (i < size && a[i] != sval) {


	++i;
}



while (1) {


}


for (;;) {

}

break statement


break;

döngü (expr) {
	statement1;
	statement2;
	statement3;
	if (c_exp)
		break;
	statement4;
	statement5;
}

gelsinburaya


int g;

int main()
{
	while (1) {
		////code
		while (1) {

			while (1) {

				if (g > 1000)
					goto OUT;

			}
			///A
		}
		///B

	}
OUT:
	//c

}
/**********************************************************************************************************************/

int g;

int main()
{
	int flag = 0;

	while (1) {
		////code
		while (1) {

			while (1) {

				if (g > 1000) {
					flag = 1;
					break;
				}

			}
			///A
			if (flag)
				break;
		}
		///B
		if (flag)
			break;
	}
OUT:
	//c

}
/**********************************************************************************************************************/


while (expr) {
	//statement1
	//statement2
	//statement3
	//statement4
	//statement5
}
/**********************************************************************************************************************/
while (1) {
	if (!expr)
		break;
	//statement1
	//statement2
	//statement3
	//statement4
	//statement5
}

/**********************************************************************************************************************/
while (1) {

	//statement1
	//statement2
	//statement3
	//statement4
	//statement5
	if (!expr)
		break;
}


/**********************************************************************************************************************/
do {

	//statement1
	//statement2
	//statement3
	//statement4
	//statement5
} while (expr);



while (1) {

	//statement1
	//statement2
	if (!expr)
		break;
	//statement3
	//statement4
	//statement5

}


#define _CRT_SECURE_NO_WARNINGS



#include <conio.h>
#include <stdio.h>

int main()
{
	int c;

	printf("soyle bana evet mi (e) hayir mi (h) : ");

	while (1) {
		c = _getch();
		if (c == 'e' || c == 'h')
			break;
	}

	printf("\n%c\n", c);

	if (c == 'e')
		printf("evettttt dediniz...\n");
	else
		printf("hayirrr dediniz...\n");
}
/**********************************************************************************************************************/
#define _CRT_SECURE_NO_WARNINGS



#include <conio.h>
#include <stdio.h>

int main()
{
	int c;

	printf("soyle bana evet mi (e) hayir mi (h) : ");

	while ((c = _getch()) != 'e' && c != 'h')
		; //null statement

	printf("\n%c\n", c);

	if (c == 'e')
		printf("evettttt dediniz...\n");
	else
		printf("hayirrr dediniz...\n");
}
/**********************************************************************************************************************/
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	if (printf("merhaba dunya!\n")) {}

}


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	while (!printf("merhaba dunya!\n")) {}

}


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	switch(printf("merhaba dunya!\n")) {}
}


tamsayı girecek misiniz? e h  e
tamsayiyi girin: 345

tamsayı girecek misiniz? e h  e
tamsayiyi girin: -123

tamsayı girecek misiniz? e h  e
tamsayiyi girin: 987

tamsayı girecek misiniz? e h  e
tamsayiyi girin: 11


tamsayı girecek misiniz? e h  h

toplam 123 sayi girdiniz...
max = 9876
min = -1246
ort = 765


macro
limits.h
	standart makrolar

	#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <time.h>
#include <limits.h>



int main()
{
	int c;
	int ival;
	int cnt = 0;

	srand((unsigned)time(0));

	int max = INT_MIN;
	int min = INT_MAX;

	while (1) {
		printf("bir sayi girecek misiniz? (e) (h) ");
		while ((c = toupper(_getch())) != 'E' && c != 'H')
			;
		printf("%c\n", c);
		if (c == 'H')
			break;

		printf("tamsayiyi girin: ");
		//scanf("%d", &ival);
		ival = (rand() % 2 ? 1 : -1) * rand();

		if (ival > max)
			max = ival;
		else if (ival < min)
			min = ival;
		++cnt;
		printf("%d\n", ival);

	}

	if (cnt) {
		printf("toplam %d sayi girildi\n", cnt);
		printf("max = %d\n", max);
		printf("min = %d\n", min);
	}
	else {
		printf("hic giris yapilmadi\n");
	}

}
/**********************************************************************************************************************/

while (1) {
	//statement1;
	//statement1;
	//statement1;
	//statement1;
	//statement1;
	if (!exp)
		break;
}

do {
	//statement1;
	//statement1;
	//statement1;
	//statement1;
	//statement1;

}while (exp);

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <time.h>
#include <limits.h>

int main()
{
	int ival;

	do {
		printf("bir tamsayi girin: ");
		scanf("%d", &ival);
	} while (ival <= 0 || ival > 100);

	printf("girilen sayi = %d\n", ival);

}
/**********************************************************************************************************************/

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <time.h>
#include <limits.h>

int main()
{
	int ival;

	while (1) {
		printf("bir tamsayi girin: ");
		scanf("%d", &ival);
		if (ival > 0 && ival <= 100)
			break;
	}

	printf("girilen sayi = %d\n", ival);

}
/**********************************************************************************************************************/

döngü (expr) {
	statement1;
	statement2;
	statement3;
	if (!c_expr) {
		statement4;
		statement5;
		statement6;
	}
}


continue;


while (expr) {
	statement1;
	statement2;
	statement3;
	if (c_expr)
		continue;

	statement4;
	statement5;
	statement6;

	if (c_expr2)
		continue;

	statement7;
	statement8;
	statement9;

}


while (exp) {

	if (cexp)
		goto out;

out:
}


do {

	if (cexp)
		goto out;

out:
} while (expr);



for (int i = 0; i < 100; ++i) {

	if (expr)
		goto out;


out:

}
----------------------------------------

i = 0;

dongu {
	statement1
	statement2
	statement3
	statement4
	++i;
}
----------------------------------------------------

for (exp1; 1; exp3)
	statement;


exp1;
while ( exp2 ) {
	statement;
	exp3;
}

#include <stdio.h>

int main()
{
	int i;

	for (i = 0; i < 100; ++i) {
		printf("%d ", i);
	}

	printf("\ndongu sonrasindaki deyim\n");

}
/**********************************************************************************************************************/
#include <stdio.h>

int main()
{
	int i;

	i = 0;

	for (; i < 100; ++i) {
		printf("%d ", i);
	}

	printf("\ndongu sonrasindaki deyim\n");

}
/**********************************************************************************************************************/
#include <stdio.h>

int main()
{
	int i;

	i = 0;

	for (; i < 100;) {
		printf("%d ", i);
		++i;
	}

	printf("\ndongu sonrasindaki deyim\n");

}
/**********************************************************************************************************************/
#include <stdio.h>

int main()
{
	int i;

	i = 0;

	while (i < 100) {
		printf("%d ", i);
		++i;
	}

	printf("\ndongu sonrasindaki deyim\n");

}
/**********************************************************************************************************************/
#include <stdio.h>

int main()
{
	int i;

	i = 0;

	for (; ;) {
		if (i == 100)
			break;
		printf("%d ", i);
		++i;
	}

	printf("\ndongu sonrasindaki deyim\n");

}
/**********************************************************************************************************************/