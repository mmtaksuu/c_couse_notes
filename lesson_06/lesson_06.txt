Fonksiyon Cagrilari
---------------

1. fonksiyon çağrısı bir ifadedir (expression)
2. C'de fonksiyon çağrısı operatör seviyesinde bir işlemdir.
function call operator ( )
fonksiyon çağrı operatörü


argument
actual parameter

func(10)
func(x)
func(x * y)
func(x * x + y * y)
func(x * x * x + y * y * y + 120)


10
x + 20

	x = func(a, b);
--------------------------------

if (sin(a) > cos(b))
	++cnt;

ndigit(x)

sin(a)

strlen(str)
------------------------------------------


int x = func();
-------------------------

y = func();
//code
//code ???
//code
//code ???
//code
//code
//code ???

func()
-------------------------------------

if (sin(x) > sin(y))
	fun();


int ndigit(int x);

{
	int a, b, c;
	///
	int n = ndigit(a) + ndigit(b) + ndigit(c);
}

while ((c = getchar()) != '\n) {

}


while (n--)
	*p1++ = *p2++;


sin(sqrt(x))

strcat(s1, strcpy(s2, s3));

#define _CRT_SECURE_NO_WARNINGS


#include <stdio.h>

int max2(int a, int b)
{
	return a > b ? a : b;
}

int main()
{
	int x, y, z, t;

	printf("dort tamsayi giriniz: ");
	scanf("%d%d%d%d", &x, &y, &z, &t);

	int ival = max2(max2(x, y), max2(z, t));

	printf("ival = %d\n", ival);

}
//----------------------------------------------------------------------------------------------------------


int func(int x)
{
	//code...
	//code...
	//code...

	return ndigit(x * y);
}


return sin(x) + cos(y);
-------------------------

variadic function
(değişken sayıda arguman ile çağrılabilen fonksiyonlar)


... (ellipsis)



void func(int x, int y, ...);

int main()
{
	//func();
	//func(12);
	func(12, 5);
	func(12, 5, 6);
	func(12, 5, 6, 3, 3 ,1);

}
//----------------------------------------------------------------------------------------------------------

#include <stdio.h>

int printf(const char *p, ...);

int main()
{
	//printf(); // gecersiz

}
//----------------------------------------------------------------------------------------------------------
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>


int main()
{
	for (int i = 0; i <= 100; ++i) {
		printf("%3d    %f\n", i, sqrt(i));
	}

}
//----------------------------------------------------------------------------------------------------------


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

int power(int base, int exp)
{
	int result = 1;

	while (exp--)
		result *= base;

	return result;
}

int main()
{
	int x, y;

	printf("iki tamsayi giriniz: ");
	scanf("%d%d", &x, &y);

	printf("%d ---> %d = %d\n", x, y, power(x, y));

}
//----------------------------------------------------------------------------------------------------------


standart kütüphane (standard library)
-------------------------------------

math
stdio
string
stdlib
ctype

-----------------------------------------

3rd party library

object-like macro
functional-like macro


INT_MAX

TYPES
	struct tm
	FILE
size_t
ptrdiff_t
time_t
clock_t
int32_t


type alias
tür eş ismi

constants - literals


token
-----

x = 10;

8274

0xaB
0X

0X1ACD

0431

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

int main()
{
	int x = 0x41;

	printf("x = %d\n", x);
	x = 041;
	printf("x = %d\n", x);
	x = 41;
	printf("x = %d\n", x);

}
//----------------------------------------------------------------------------------------------------------



signed int
unsigned int

signed long
unsigned long

signed long long		C99
unsigned long long      C99


float
double
long double

7656


78900

1654987120

-768
y = -x;

876u

62U


#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <math.h>

int main()
{
	int x = -1;

	if (x > 1u)
		printf("dogru\n");
	else
		printf("yanlis\n");


}
//----------------------------------------------------------------------------------------------------------


long türden

76L
12l

#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int main()
{
	for (int i = 90; i < 10l; ++i)
		printf("%d\n", i);

}
//----------------------------------------------------------------------------------------------------------


45UL
45LU
45ul



#include <iostream>

int main()
{
	using namespace std;

	//cout << typeid(76).name() << "\n";
	//cout << typeid(0x1ac4).name() << "\n";
	//cout << typeid(0x1ac4L).name() << "\n";
	//cout << typeid(01234u).name() << "\n";
	cout << typeid(45UL).name() << "\n";
	cout << typeid(45ULL).name() << "\n";

}
//----------------------------------------------------------------------------------------------------------


10'luk sayi sistemi mi?        8/16'lik sayi sistemi mi?

long						  unsigned int


#include <iostream>

//int türü 4 byte long türü 4 byte

int main()
{
	using namespace std;

	cout << typeid(2147483647).name() << "\n"; //int
	cout << typeid(2147483650).name() << "\n"; //unsigned long
	cout << typeid(0x80000002).name() << "\n";  //unsigned int

}
//----------------------------------------------------------------------------------------------------------

unsigned long